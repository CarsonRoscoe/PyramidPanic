/*===================================================================================*//**
	BaseItem
	
	Abstract class for an item that can be carried in an Inventory.

    @author Erick Fernandez de Arteaga
	
*//*====================================================================================*/

#pragma once

/*========================================================================================
	Dependencies	
========================================================================================*/
class Inventory;
class GameObject;

/*========================================================================================
	BaseItem	
========================================================================================*/
class BaseItem
{
	/*----------------------------------------------------------------------------------------
		Instance Fields
	----------------------------------------------------------------------------------------*/
	private:
		Inventory* m_inventory;

    /*----------------------------------------------------------------------------------------
		Resource Management
    ----------------------------------------------------------------------------------------*/
    public:
        /** Default constructor. */
        explicit BaseItem() = default;

		virtual ~BaseItem() {};

    /*----------------------------------------------------------------------------------------
		Instance Methods
    ----------------------------------------------------------------------------------------*/
	public:
		/**
			Adds this item to the given inventory.
		*/
		virtual void addToInventory(Inventory* inventory);

		/**
			Returns a reference to the GameObject that owns the Inventory component this 
			item is held by.
		*/
		virtual GameObject* owner();
};
